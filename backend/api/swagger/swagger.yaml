swagger: '2.0'
info:
  version: 1.0.0
  title: API for sending emails
host: localhost:3000
basePath: "/api/v1"
tags:
- name: Emails
  description: API Email
- name: Logs
  description: API Log
schemes:
- http
consumes:
- application/json
produces:
- application/json
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    description: |
     For accessing the API a valid JWT token must be passed in all the queries in
     the 'Authorization' header.
  
  
     A valid JWT token is generated by the API and retourned as answer of a call
     to the route /login giving a valid user & password.
  
  
     The following syntax must be used in the 'Authorization' header :
  
         Bearer xxxxxx.yyyyyyy.zzzzzz

paths:
  /emails:
    x-swagger-router-controller: emailController
    post:
      tags:
      - Emails
      summary: Send email
      operationId: postEmail
      security:
          - Bearer: []
      x-security-scopes:
        - admin
      parameters:
      - in: body
        name: user
        required: true
        description: Dados de configuração do e-mail
        schema:
          "$ref": "#/definitions/sendEmail"
      - name: smtp_host
        in: header
        description: 'Ex: smtp.doamin.com'
        required: true
        type: string
      - name: smtp_port
        in: header
        description: 'Ex: 999'
        required: true
        type: string
      - name: smtp_require_tls
        in: header
        description: 'Ex: true or false'
        required: true
        type: boolean
      - name: smtp_reject_unauthorized
        in: header
        description: 'Ex: true or false'
        required: true
        type: boolean
      - name: smtp_auth_user
        in: header
        description: 'Ex: name@domain.com'
        required: true
        type: string
      - name: smtp_auth_pass
        in: header
        description: 'Ex: 123456'
        required: true
        type: string
      produces:
      - application/json
      responses:
        200:
          description: Email was forwarded
          schema:
            $ref: "#/definitions/responseSendEmail"
        400:
          description: Invalid Order
        403:
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

    get:
      tags:
        - Emails
      summary: Recupera todos que deram problema
      operationId: getAllEmails
      security:
        - Bearer: []
      x-security-scopes:
        - admin
      responses:
        200:
          description: success
          schema:
            type: object
            items:
              $ref: '#/definitions/objectGeneric'
        403:
          description: "Access Denied"
          schema:
            $ref: "#/definitions/Error"

  #
  # Recurso de Log
  #
  /logs:
      x-swagger-router-controller: logController
      get:
        tags:
          - Logs
        summary: Recupera todos
        operationId: getAll
        security:
          - Bearer: []
        x-security-scopes:
          - admin
        responses:
          200:
            description: success
            schema:
              type: object
              items:
                $ref: '#/definitions/objectGeneric'
          403:
            description: "Access Denied"
            schema:
              $ref: "#/definitions/Error"

definitions:

  sendEmail:
    type: object
    required:
    - from
    - to
    - subject
    - text
    - html
    properties:
      from:
        type: string
      to:
        type: array
        items:
          type: string
      subject:
        type: string
      text:
        type: string
      html:
        type: string

  responseSendEmail:
    type: object
    properties:
      message:
        type: string

  objectGeneric:
    type: object

  Error:
    type: object
    properties:
      message:
        type: string
